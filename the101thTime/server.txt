 private void acceptFileFolderAsync() {
        // int count = 0 ;
        // /*
        //  * This needs logic for accepting files and folders,
        //  *  and the requests for files and folders.
        //  * 
        //  * This needs to handle stopping by either the server or client.
        //  * 
        //  * This should only be called by a thread. 
        // */
        // String tmp = "";
        // System.out.println(count++);
        // try {
        //     socketWork.socket.setSoTimeout(1000) ;
        // } catch (SocketException e) {
        //     e.printStackTrace() ;
        //     System.out.println("Could not set socket time out for Communication, continuing run.");
        // }
        // System.out.println(count++);
        
        // while (acceptFileFolderAcyncBreak && !Thread.interrupted()) {
        //     System.out.println(count++);
        //     try {
        //         while (!(tmp = socketWork.dataInputStream.readUTF()).equals("done") && !Thread.interrupted() && acceptFileFolderAcyncBreak) {
        //             System.out.println(count++);
        //             // The switch case goes here
        //             System.out.println(tmp);
                    
                    
        //             confirmRequest() ;
        //             count-- ;
        //         }
        //         if (tmp.equals("done") || Thread.interrupted() || !acceptFileFolderAcyncBreak) {
        //             System.out.println("recieved done, closing by edge call") ;
        //             confirmRequest() ; // This for when they send back a done command.
        //             break ;
        //         }
        //     }
        //     catch (IOException e) {
        //         System.out.println("There has been an unknown issue that went with acceptFileFolderAcync loop, closing this server, thread.");
        //         acceptFileFolderAcyncBreak = false ;
        //     }
        //     if (tmp.equals("done") || Thread.interrupted() || acceptFileFolderAcyncBreak ) {
        //         break ;
        //     }
        //     count-- ;
                
        // }

        
    }

    // public void joinClose() {
    //     try {
    //         fileFolderAcync.join() ;
    //     } catch (InterruptedException e) {
    //         e.printStackTrace() ;
    //     }
    //     socketWork.close() ;
    // }

    // public void forceClose() {
    //     acceptFileFolderAcyncBreak = false ;
    //     try {
    //         fileFolderAcync.interrupt() ;
    //         fileFolderAcync.join() ;
    //     } catch (InterruptedException e) {
    //         e.printStackTrace() ;
    //         System.out.println("Issues with the thread closing present. Program continuing...") ;
    //     }
    //     socketWork.close() ;
    // }
